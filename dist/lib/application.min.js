var applicationDependencies=applicationDependencies||{providers:{}},application=angular.module("Application",["ngRoute","ngResource","ngSanitize","Services","Controllers","Filters","Components","Directives"]).constant("APP_CONFIG",{API_URI:"https://domain/api/"}).constant("APP_EVENTS",{needsPlayer:"Player:profile:missing",authenticated:"Auth:authentication:success",noLoginToken:"Auth:token:missing",loginSuccess:"Auth:login:success",loginError:"Auth:login:error",logoutSuccess:"Auth:logout:success",playerUpdated:"Player:updated"}).provider("$logging",applicationDependencies.providers.loggingProvider).provider("$analytics",applicationDependencies.providers.analyticsProvider).provider("$routeResolver",applicationDependencies.providers.routeResolver).config(["APP_CONFIG","$routeProvider","$routeResolverProvider","$controllerProvider","$compileProvider","$filterProvider","$provide","$locationProvider","$loggingProvider",function(a,b,c,d,e,f,g,h,i){i.setApp("AngularQuickStart"),c.routeConfig.setBaseDirectories("templates/views/","lib/app/controllers/"),application.register={controller:d.register,directive:e.directive,filter:f.register,factory:g.factory,service:g.service},h.hashPrefix("!"),e.aHrefSanitizationWhitelist(/^\s*(https?|ftp|mailto|chrome-extension|blob|sms):/),e.imgSrcSanitizationWhitelist(/^\s*(https?|ftp|file|blob):|data:image\//);var j=c.route;b.when("/home",j.resolve("Home")).when("/login",j.resolve("Login",{view:"Login",controller:"Login",service:"Login"})).otherwise({redirectTo:"/home"})}]).run(["$rootScope","$location","$window","$route","$logging",function(a){a.$on("$routeChangeStart",function(){}),a.$on("$routeChangeSuccess",function(){})}]);angular.module("Components",[]),angular.module("Controllers",[]).controller("MasterCtrl",["$scope","$rootScope","$route","$logging","APP_CONFIG",function(a){a._name="MasterCtrl"}]),angular.module("Directives",[]),angular.module("Filters",[]);var applicationDependencies=applicationDependencies||{providers:{}};applicationDependencies.providers.loggingProvider=function(){var a,b=null,c=["log","warn","error","debug","info"],d={setApp:function(a){b=a},setUrl:function(b){a=b},output:function(a){var d="string"==typeof b?b+":":"";if(d+="string"==typeof arguments[1]?arguments[1]:arguments[1],"string"!=typeof a||c.indexOf(a)<0)throw"logProvider:output: type supplied is invalid";return function(){var b=[].splice.call(arguments,0),c="string"==typeof b[0]?":"+b.shift():"";console[a]((new Date).getTime(),d+c,[].concat(b))}},$get:function(){return console.log("when is this called?"),console.log}};return d.error=d.output("error"),d.log=d.output("log"),d.warn=d.output("warn"),d.debug=d.output("debug"),d},applicationDependencies.providers.analyticsProvider=function(){var a;return{setAppKey:function(b){a=b},$get:function(){}}},applicationDependencies.providers.routeResolver=function(){this.$get=function(){return this},this.routeConfig=function(){var a="/app/views/",b="/app/controllers/",c="/app/services/",d=function(d,e,f){a=d,b=e,c=f},e=function(){return a},f=function(){return b},g=function(){return c};return{setBaseDirectories:d,getControllersDirectory:f,getServicesDirectory:g,getViewsDirectory:e}}(),this.route=function(a){var b=function(b,d,e){d||(d=""),"object"==typeof d&&(d="");var f={};return f.templateUrl=a.getViewsDirectory()+d+"View."+b+".tmpl.html",f.controller=b+"Controller",f.secure=e?e:!1,f.resolve={load:["$q","$rootScope",function(e,f){var g=[a.getControllersDirectory()+d+"Controller."+b+".js"];return c(e,f,g)}]},f},c=function(a,b,c){var d=a.defer();return $script(c,function(){d.resolve(),b.$apply()}),d.promise};return{resolve:b}}(this.routeConfig)},angular.module("Services",[]).factory("DeviceSvc",["$rootScope","$resource","APP_CONFIG","$log",function(a,b,c,d){{var e={_name:"DeviceSvc",apiDefinition:{path:c.API_URI+"devices/:deviceId/:verify",params:{deviceId:"@deviceId"},actions:{get:{method:"GET",headers:c.headers.mobileServices,isArray:!1},query:{method:"GET",headers:c.headers.mobileServices,isArray:!0},update:{method:"PATCH",headers:c.headers.mobileServices,isArray:!1},save:{method:"POST",headers:c.headers.mobileServices,isArray:!1},verify:{method:"GET",headers:c.headers.mobileServices,isArray:!1,params:{verify:"verify"}},"delete":{method:"DELETE",headers:c.headers.mobileServices,isArray:!1}}}};d(e._name,e)}return e.init=function(){return e.api=b(e.apiDefinition.path,e.apiDefinition.params,e.apiDefinition.actions),e.player=null,e},e.getDevice=function(a){return new Promise(function(b,c){e.api.get({deviceId:a},b,c)})},e.verifyDevice=function(a,b){return new Promise(function(c,d){e.api.verify({deviceId:a,verification:b},c,d)})},e.init()}]);